#!/bin/bash

# Starts a node-provisioning-service with docker

ORGDIR=`pwd`
cd $(dirname $0)

source tools/build.sh
source tools/etcdctl.sh
source tools/docker.sh

SVC_IMAGENAME="inaetics/node-provisioning:latest"
SVC_IMAGEREPO="https://github.com/INAETICS/node-provisioning-service"

clean_up () {
    docker stop node-provisioning-service > /dev/null 2>/dev/null
    docker rm node-provisioning-service >/dev/null 2>/dev/null
    cd $ORGDIR
    exit 0
}
trap clean_up SIGHUP SIGINT SIGTERM

echo "Looking for image: ${SVC_IMAGENAME}"
svcimage=$(docker/find_image $SVC_IMAGENAME)
if [ ! "$svcimage" == "" ]; then
  echo "Using local image $svcimage"
else
  echo "No local image found!.."
  echo "Trying registries.."
  registries=($(etcd/values /inaetics/docker-registry-service))
  svcimage=$(docker/pull_image $SVC_IMAGENAME "${registries[@]}")

  if [ ! "$svcimage" == "" ]; then
    echo "Using pulled image $svcimage"
  else
    echo "No upstream image found!.."
    echo "Attempting local build.."
    tmpdir=$(mktemp -d)
    git clone $SVC_IMAGEREPO $tmpdir
    builder/build_image $SVC_IMAGENAME $tmpdir
    svcimage=$(docker/find_image $SVC_IMAGENAME)

    if [ "$svcimage" == "" ]; then
      echo "Unable to locate or build image.... aborting!!" 1>&2
      exit 1
    fi
  fi
fi

echo "provisioning start"
    docker rm node-provisioning-service >/dev/null 2>/dev/null
docker run --name node-provisioning-service -d -p 8080:8080 $svcimage \
    /tmp/node-provisioning.sh

while true; do
  echo "looping"
  sleep 10 &
  wait $!
done

